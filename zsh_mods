# zmodload zsh/zprof # uncomment for zsh startup testing `time  zsh -i -c exit`
export HISTCONTROL=ignoreboth:erasedups
export EDITOR='nvim'
export BUNDLER_EDITOR='nvim'
export PATH="$PATH:$PWD/bin:/home/jesper/.local/bin:/home/jesper/.yarn/bin:/home/jesper/.cargo/bin:/home/jesper/bin"
export LESS='-F -g -i -M -R -S -w -X -z-4'
export TERM=screen-256color
export NODEJS_CHECK_SIGNATURES=no
export PGPORT=5434
export DD_TRACE_STARTUP_LOGS=false

autoload zmv
bindkey -e
unalias gbr

export PATH="$HOME/.rbenv/bin:$PATH"

if [[ -v MAC ]]; then
  export HOMEBREW_NO_AUTO_UPDATE=1
  # export EDITOR=vim
  export SHELL=/usr/local/bin/zsh
  export PATH=/usr/local/bin:/usr/local/share/npm/bin:$PATH
  export PATH=./bin:~/bin:/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH
  alias tar='/usr/local/bin/gtar'
  # . "$(brew --prefix asdf)/asdf.sh"

  export NVM_DIR="$HOME/.nvm"
  [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh" --no-use  # This loads nvm
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init - zsh)"
  alias sed=gsed
else
  xset r rate 250 40
  setxkbmap -option "caps:escape"
  setxkbmap us
  xmodmap ~/.Xmodmap
  [[ -r "/usr/share/z/z.sh" ]] && source /usr/share/z/z.sh
  [[ -r "~/.z.sh/z.sh" ]] && source ~/.z.sh/z.sh
  eval "$(rbenv init -)"
  export PATH="$PWD/bin:$PATH"
  setopt HIST_FIND_NO_DUPS
  setopt HIST_IGNORE_DUPS
fi

export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

fpath=(${ASDF_DIR}/completions $fpath)
autoload -Uz compinit
compinit

unalias g
g() {
  if [[ $# -eq 0 ]]; then
    command git status -sb
  else
    command hub "$@";
  fi
}
# alias gs='git status -sb'

# Go
export GOPATH=$HOME/golang
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:$GOROOT/bin

# hub alias
eval "$(hub alias -s)"

# Alias and function definitions.
. ~/.aliases
. ~/.secrets

fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

GPG_TTY=$(tty)
export GPG_TTY

if [ ! -S ~/.ssh/ssh_auth_sock ]; then
  eval `ssh-agent`
  ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
fi
export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
ssh-add -l > /dev/null || ssh-add

# zprof
