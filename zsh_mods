export HISTCONTROL=ignoreboth:erasedups
export EDITOR='nvim'
export BUNDLER_EDITOR='nvim'
export PATH="$PATH:$PWD/bin:/home/jesper/.cargo/bin:/home/jesper/bin"
export LESS='-F -g -i -M -R -S -w -X -z-4'
export NODEJS_CHECK_SIGNATURES=no

autoload zmv
bindkey -e

setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_DUPS

# asdf
. /opt/asdf-vm/asdf.sh
export ASDF_RUBY_BUILD_VERSION=master

# Go
export ASDF_GOLANG_MOD_VERSION_ENABLED=true
[ -f ~/.asdf/plugins/golang/set-env.zsh ] && source ~/.asdf/plugins/golang/set-env.zsh

# Alias and function definitions.
. ~/.aliases
. ~/.secrets

fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

# For GPG and commit signing
GPG_TTY=$(tty)
export GPG_TTY
if [ -f "${HOME}/.gpg-agent-info" ]; then
  . "${HOME}/.gpg-agent-info"
  export GPG_AGENT_INFO
  export SSH_AUTH_SOCK
  export SSH_AGENT_PID
fi

if [ ! -S ~/.ssh/ssh_auth_sock ]; then
  eval `ssh-agent`
  ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
  export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
  ssh-add -l > /dev/null || ssh-add
fi

# [ -x "$(command -v atuin)" ] && eval "$(atuin init zsh --disable-up-arrow)"
[ -x "$(command -v atuin)" ] && eval "$(atuin init zsh --disable-up-arrow)"
# eval "$(zoxide init zsh)"
[ -f /usr/share/z/z.sh ] && source /usr/share/z/z.sh
# eval "$(gh copilot alias -- zsh)" # SLOW!
