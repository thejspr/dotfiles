snippet pry
	require 'pry'; binding.pry
snippet #!
	#!/usr/bin/ruby
snippet case
	case ${1:object}
	when ${2:condition}
		${3}
	end
snippet if
	if ${1:condition}
		${2}
	end
snippet ife
	if ${1:condition}
		${2}
	else
		${3}
	end
# definitions
snippet cla class .. end
	class ${1:`substitute(Filename(), '^.', '\u&', '')`}
		${2}
	end
snippet mod module .. end
	module ${1:`substitute(Filename(), '^.', '\u&', '')`}
		${2}
	end
snippet def
	def ${1:method_name}
		${2}
	end
# iterators
snippet ea
	each { |${1:e}| ${2} }
snippet inj
	inject(${1:init}) { |${2:mem}, ${3:var}| ${4} }
snippet map
	map { |${1:e}| ${2} }
snippet col
	collect { |${1:e}| ${2} }
snippet sub
	${1:g}sub(${2:/pattern/}) { |${3:match}| ${4} }
snippet lam
	lambda { |${1:args}| ${2} }
snippet do
	do |${1:variable}|
		${2}
	end
snippet task
	desc "${1:Task description}"
	task :${2:task_name => [:dependent, :tasks]} do
		${3}
	end
